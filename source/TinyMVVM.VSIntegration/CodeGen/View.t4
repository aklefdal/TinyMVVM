<#@ template language="C#" #>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System.Linq" #>
<#@ assembly name="$(TinyMVVMDir)\TinyMVVM.dll" #>
<#@ import namespace="TinyMVVM.DSL.TextParser" #>
<#@ import namespace="TinyMVVM.SemanticModel.MVVM" #>
<#
	//var mvvmFile = @"$(MvvmFilePath)";
	var code = @"$(Code)";
	var parser = new Parser();
	var modelSpec = parser.Parse(Code.Inline(code));
	var viewModel = modelSpec.ViewModels.SingleOrDefault(vm => vm.Name == "$(ViewModel.Name)");
	var currentNamespace = @"$(CurrentNamespace)";
#>

<# if (viewModel != null) { #>

<UserControl x:Class="<#= currentNamespace #>.<#= viewModel.Name#>"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
            
    </Grid>
</UserControl>

<# } #>